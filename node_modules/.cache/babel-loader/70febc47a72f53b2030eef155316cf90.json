{"ast":null,"code":"import _slicedToArray from\"/home/aadivyaraushan/Documents/Coding/Web Development/JS/React JS/portfolio/portfolio/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import React,{createContext,useReducer}from'react';import{jsx as _jsx}from\"react/jsx-runtime\";export var ThemeContext=/*#__PURE__*/createContext();var INITIAL_STATE={darkMode:false};var ThemeReducer=function ThemeReducer(state,action){if(action.type===\"TOGGLE\"){return{darkMode:!state.darkMode};}else{return state;}};export var ThemeProvider=function ThemeProvider(props){var _useReducer=useReducer(ThemeReducer,INITIAL_STATE),_useReducer2=_slicedToArray(_useReducer,2),state=_useReducer2[0],dispatch=_useReducer2[1];return/*#__PURE__*/_jsx(ThemeContext.Provider,{value:{state:state,dispatch:dispatch},children:props.children});};","map":{"version":3,"sources":["/home/aadivyaraushan/Documents/Coding/Web Development/JS/React JS/portfolio/portfolio/src/context.js"],"names":["React","createContext","useReducer","ThemeContext","INITIAL_STATE","darkMode","ThemeReducer","state","action","type","ThemeProvider","props","dispatch","children"],"mappings":"2KAAA,MAAOA,CAAAA,KAAP,EAAgBC,aAAhB,CAA+BC,UAA/B,KAAiD,OAAjD,C,2CAEA,MAAO,IAAMC,CAAAA,YAAY,cAAGF,aAAa,EAAlC,CAEP,GAAMG,CAAAA,aAAa,CAAG,CAAEC,QAAQ,CAAE,KAAZ,CAAtB,CAEA,GAAMC,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,CAACC,KAAD,CAAQC,MAAR,CAAmB,CACpC,GAAGA,MAAM,CAACC,IAAP,GAAgB,QAAnB,CACA,CACI,MAAO,CAACJ,QAAQ,CAAE,CAACE,KAAK,CAACF,QAAlB,CAAP,CACH,CAHD,IAKA,CACI,MAAOE,CAAAA,KAAP,CACH,CACJ,CATD,CAWA,MAAO,IAAMG,CAAAA,aAAa,CAAG,QAAhBA,CAAAA,aAAgB,CAACC,KAAD,CAAW,CACpC,gBAA0BT,UAAU,CAACI,YAAD,CAAeF,aAAf,CAApC,4CAAOG,KAAP,iBAAcK,QAAd,iBAEA,mBACI,KAAC,YAAD,CAAc,QAAd,EAAuB,KAAK,CAAE,CAACL,KAAK,CAALA,KAAD,CAAQK,QAAQ,CAARA,QAAR,CAA9B,UACKD,KAAK,CAACE,QADX,EADJ,CAKH,CARM","sourcesContent":["import React, { createContext, useReducer } from 'react'\n\nexport const ThemeContext = createContext();\n\nconst INITIAL_STATE = { darkMode: false };\n\nconst ThemeReducer = (state, action) => {\n    if(action.type === \"TOGGLE\")\n    {\n        return {darkMode: !state.darkMode}\n    }\n    else\n    {\n        return state;\n    }\n}\n\nexport const ThemeProvider = (props) => {\n    const [state, dispatch] = useReducer(ThemeReducer, INITIAL_STATE);\n\n    return (\n        <ThemeContext.Provider value={{state, dispatch}}>\n            {props.children}\n        </ThemeContext.Provider>\n    )\n}\n"]},"metadata":{},"sourceType":"module"}